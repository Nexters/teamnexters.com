---
name: Release
on: [push]

env:
  GSHEET_CLIENT_EMAIL: ${{ secrets._GSHEET_CLIENT_EMAIL }}
  GSHEET_PRIVATE_KEY: ${{ secrets._GSHEET_PRIVATE_KEY }}.replace(/\\n/g, "\n")
  SPREADSHEET_ID: ${{ secrets._SPREADSHEET_ID }}
  HUSKY_SKIP_HOOKS: 1

# on:
#   pull_request:
#     types: [closed]
#     branches:
#       - main
jobs:
  release:
    # if: github.event.pull_request.merged == true
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: 15
      - uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          npm ci
      - id: color
        name: Load Google Sheet - color
        uses: jroehl/gsheet.action@v1.0.0
        with:
          spreadsheetId: ${{ env.SPREADSHEET_ID }}
          commands: |
            [
              { "command": "getData", "args": { "worksheetTitle": "color", "minCol": 1 } }
            ]
      - id: main-about
        name: Load Google Sheet - Main, About
        uses: jroehl/gsheet.action@v1.0.0
        with:
          spreadsheetId: ${{ env.SPREADSHEET_ID }}
          commands: |
            [
              { "command": "getData", "args": { "worksheetTitle": "M-Auto", "minCol": 1 } },
              { "command": "getData", "args": { "worksheetTitle": "M-background", "minCol": 1 } },
              { "command": "getData", "args": { "worksheetTitle": "About", "minCol": 1 } },
              { "command": "getData", "args": { "worksheetTitle": "A-image", "minCol": 1 } },
              { "command": "getData", "args": { "worksheetTitle": "A-information", "minCol": 1 } },
              { "command": "getData", "args": { "worksheetTitle": "A-review", "minCol": 1 } },
              { "command": "getData", "args": { "worksheetTitle": "Footer", "minCol": 1 } }
            ]
      - id: project
        name: Load Google Sheet - Project
        uses: jroehl/gsheet.action@v1.0.0
        with:
          spreadsheetId: ${{ env.SPREADSHEET_ID }}
          commands: |
            [
              { "command": "getData", "args": { "worksheetTitle": "Project", "minCol": 1 } }
            ]
      - id: recruitment
        name: Load Google Sheet - Recruitment
        uses: jroehl/gsheet.action@v1.0.0
        with:
          spreadsheetId: ${{ env.SPREADSHEET_ID }}
          commands: |
            [
              { "command": "getData", "args": { "worksheetTitle": "Recruitment", "minCol": 1 }},
              { "command": "getData", "args": { "worksheetTitle": "R-button", "minCol": 1 }},
              { "command": "getData", "args": { "worksheetTitle": "R-qualification", "minCol": 1 }},
              { "command": "getData", "args": { "worksheetTitle": "R-schedule", "minCol": 1 }},
              { "command": "getData", "args": { "worksheetTitle": "R-caution", "minCol": 1 }},
              { "command": "getData", "args": { "worksheetTitle": "R-notice", "minCol": 1 }},
              { "command": "getData", "args": { "worksheetTitle": "R-background", "minCol": 1 }}
            ]
      - id: contact
        name: Load Google Sheet - Contact
        uses: jroehl/gsheet.action@v1.0.0
        with:
          spreadsheetId: ${{ env.SPREADSHEET_ID }}
          commands: |
            [
              { "command": "getData", "args": { "worksheetTitle": "Contact", "minCol": 1 } }
            ]
      - name: make contents
        run: |
          echo ${{ toJson(steps.main-about.outputs.results) }} > ./_content/data.json
          echo ${{ toJson(steps.project.outputs.results) }} > ./_content/project.json
          echo ${{ toJson(steps.recruitment.outputs.results) }} > ./_content/recruitment.json
          echo ${{ toJson(steps.contact.outputs.results) }} > ./content/contact.json
          echo ${{ toJson(steps.color.outputs.results) }} > ./_content/color.json
          python .script/make_content.py
          python .script/make_recruitment.py
      - name: make color
        run: |
          python .script/make_color.py
      - name: Commit changed files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git status
          git commit -m '[bot] update files' --allow-empty && git push
      #   env:
      #     HUSKY_SKIP_HOOKS: 1
      #   run: |
      #     git config --local user.email "action@github.com"
      #     git config --local user.name "GitHub Action"
      #     VERSION=$(npm run next-version | tail -1)
      #     DESCRIPTION=$(yarn run standard-version --dry-run --silent | grep -v yarn | grep -v Done | grep -v "\-\-\-" | grep -v standard-version)
      #     echo >>$GITHUB_ENV DESCRIPTION=$DESCRIPTION
      #     echo >>$GITHUB_ENV VERSION=$VERSION
      #     npm run release
      #     git tag -d v$VERSION
      #     git reset --soft HEAD~~ && git commit --no-verify --no-edit -m "chore(release): ${VERSION}"
      #     git tag v$VERSION
      # - name: Push changes
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     tags: true
      # - name: Create Github Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #   with:
      #     tag_name: v${{ env.VERSION }}
      #     release_name: Release v${{ env.VERSION }}
      #     body: |
      #       ${{ env.DESCRIPTION }}
      #     draft: false
      #     prerelease: false
      # - name: Build and push Docker app images
      #   uses: docker/build-push-action@v1.1.0
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #     repository: nexters/landlords-server
      #     dockerfile: Dockerfile
      #     tags: ${{ env.VERSION }}, latest
    # - name: Commit files
